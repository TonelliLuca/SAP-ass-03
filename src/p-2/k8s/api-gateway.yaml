apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: sap-assignment
spec:
  replicas: 1
  selector:
    matchLabels: { app: api-gateway }
  template:
    metadata:
      labels: { app: api-gateway }
    spec:
      initContainers:
        - name: wait-for-eureka
          image: curlimages/curl:latest
          command: [ 'sh', '-c', 'until curl -s http://eureka-service:8761/actuator/health | grep -q "UP"; do echo waiting for eureka; sleep 2; done;' ]
        - name: wait-for-ebike
          image: curlimages/curl:latest
          command: [ 'sh', '-c', 'until curl -s http://ebike-microservice:8080/health | grep -q "UP"; do echo waiting for ebike-microservice; sleep 2; done;' ]
        - name: wait-for-user
          image: curlimages/curl:latest
          command: [ 'sh', '-c', 'until curl -s http://user-microservice:8080/health | grep -q "UP"; do echo waiting for user-microservice; sleep 2; done;' ]
        - name: wait-for-map
          image: curlimages/curl:latest
          command: [ 'sh', '-c', 'until curl -s http://map-microservice:8080/health | grep -q "OK"; do echo waiting for map-microservice; sleep 2; done;' ]
        - name: wait-for-ride
          image: curlimages/curl:latest
          command: [ 'sh', '-c', 'until curl -s http://ride-microservice:8080/health | grep -q "OK"; do echo waiting for ride-microservice; sleep 2; done;' ]
      containers:
        - name: api-gateway
          image: api-gateway:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef: { name: app-config }
          env:
            - name: EUREKA_CLIENT_REGISTER_WITH_EUREKA
              value: "true"
            - name: EUREKA_CLIENT_FETCH_REGISTRY
              value: "true"
          readinessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 60
            periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: sap-assignment
spec:
  selector: { app: api-gateway }
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      nodePort: 30080    # mappa su porta 30080 del nodo
  type: NodePort
